name: Go Multi-Platform Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, linux]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
      - name: Set environment variables
        run: |
          echo "GOOS=${{ matrix.goos }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
      - name: Install dependencies
        run: go mod tidy
      - name: Build application
        run: go build -o warp-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/.
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: warp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./warp-${{ matrix.goos }}-${{ matrix.goarch }}
    
  release:
    needs: build-and-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, linux]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Автоматически созданный релиз для тега ${{ github.ref_name }}.
          draft: false
          prerelease: false
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: warp-${{ matrix.goos }}-${{ matrix.goarch }}
      - name: Upload binaries to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./warp-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: warp-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream
